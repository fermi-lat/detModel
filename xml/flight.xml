<?xml version="1.0"  ?>

<!--  $Header: /nfs/slac/g/glast/ground/cvs/detModel/xml/flight.xml,v 1.13 2001/03/02 00:26:31 jrb Exp $        -->
<!-- 1 Feb 2001   Default length unit is now mm.  Change constants
                   accordingly.                             (jrb) 
    22 Feb 2001   Add CVS macros, CVSid attribute for gdd     
     1 Mar 2001   Changes for <identifier> to <idField> change in dtd.
                  Includes combining old pair of diode identifier fields
                  into just one and ( *sigh* ) eliminating "orient" field.
-->

<!DOCTYPE gdd SYSTEM "gdd.dtd"
  [
<!-- Following 4 definitions are used to identify diodes -->
    <!ENTITY dminusSmall    "0" >
    <!ENTITY dplusSmall     "1" >
    <!ENTITY dminusLarge    "2" >
    <!ENTITY dplusLarge     "3" >
  ]
>
<gdd CVSid="$Id: flight.xml,v 1.13 2001/03/02 00:26:31 jrb Exp $" >
  <constants>
    <version major="0" minor="0" />
    <primary>
      <primCategory name="global">
        <overview>These parameters don't belong to any single subdetector
of the LAT.</overview>
        <prim name="modWidth" value="389.7">Width of a single CAL-TKR module.
</prim>
        <prim name="xNum" value="4" uType="count">Number of towers in x.</prim>
        <prim name="yNum" value="4" uType="count">Number of towers in y.</prim>
        <prim name="cal_tracker_gap" value="42.8">Spacing between tracker 
           and calorimeter</prim>
        <prim name="wallGap" value="1.0">gap between modules</prim>
        <prim name="wallMaterial"   value="C" type="string" uType="mat"> Wall material
</prim>
        <prim name="wallThickness"  value="1.5">   Wall thickness</prim>
        <prim name="wallWidth"  value="389.7">width of walls (less than mod_width)</prim>
        <prim name="vacuumMat" value="Vacuum" type="string" uType="mat">Need
         vacuum for some 'solids'</prim>
      </primCategory>
      <primCategory name="CALprim" >
<overview><![CDATA[CAL people need to put something real here.  If
this works the way I think it should, any standard html markup like
this use of <strong>strong</strong> can
go here.  Just avoid two right square brackets (]) followed by a
less-than (>) because that will be interpreted as the end of the
CDATA section, which is XML's way to say "take this literally". ]]></overview>  
	<prim name="crystalMat" value="CsI" type="string" uType="mat">Crystal Material
</prim>
	<prim name="diodeMat" value="Si" type="string" uType="mat">Diode Material
</prim>
        <prim name= "CALWrapMat" value= "Polystyrene" type="string" uType="mat">
Wrap material for CsI logs</prim>
        <prim name= "CALFrameMat" value= "Al20" type="string" uType="mat">
Material for CAL frame</prim>
	<prim name="CALSpaceMat" value="rubber60A1" type="string" uType="mat">
Material for space between CAL layers
</prim>
	<prim name="nLayer" value="8" uType="count"> Number of layers of CAL CsI crystals
</prim>
        <prim name="diodeX" value="0.18">Thickness of diodes
</prim>
        <prim name= "diodeY" value= "12.0">Width of diodes
</prim>
        <prim name= "diodeLZ" value= "8.0">Height of large diode
</prim >
        <prim name= "diodeSZ" value= "2.0">Height of a small diode
</prim>
        <prim name= "CsILength" value= "369.9">Length of a CsI crystal
</prim>

      <!-- this used to be called height -->
        <prim name= "CsITrans" value= "30.0">(Transverse) width of a CsI crytal
</prim>   
     <!-- this used to be called width -->
         <prim name= "CsIZ" value= "21.0">Height of a CsI crystal
</prim> 
        <prim name= "diodeYOffset" value= "0.0">Y (transverse) offset of diode relative to crystal
</prim>
        <prim name= "diodeLZOffset" value= "-2.6">Z offset of large diode relative to crystal
</prim>
        <prim name= "diodeSZOffset" value= "5.6">Z offset of small diode relative to crystal
</prim>

         <!-- trans. distance between logs -->
        <prim name= "CALGap" value= "0.84">Transverse distance between logs
</prim> 
        <prim name= "nEltPerLayer" value= "12" uType="count">Number of crystals per layer within a tower
</prim>
        <prim name="CALInterLayer" value="2.62" >Gap between CAL layers
</prim>

        <prim name= "CALFrameSideThick" value= "8.0">Thickness of CAL frame sides
</prim>

<!-- Just use one symbol for now since top and bottome are the same.
     Would have to have additional symbol and additional box type
     if this changes.  -->
        <prim name= "CALFrameTBThick" value= "20.0">Thickness of top and bottom of CAL frame
</prim>

    <!-- Cal grid stuff -->
        <prim name= "CALGridInner" value= "3.0">
        Thickness of CAL grid between towers
</prim>
        <prim name= "CALGridOuter" value= "12.0">Thickness of CAL grid on outside towers</prim>
        <prim name= "CALGridMat" value= "Al" type="string" uType="mat">Material for CAL grid</prim>
        <prim name= "CALFlange" value= "26.0">** Need meaningful comment here**
</prim>
        <prim name= "CALFlangeMat" value= "Al50" type="string" uType="mat">
Material for CAL flange
</prim>
      </primCategory>
      <primCategory name="TKRprim" >
<overview><![CDATA[TKR people need to put something real here.  If
this works the way I think it should, any standard html markup like
this use of <strong>strong</strong> can
go here.  Just avoid two right square brackets (]) followed by a
less-than (>) because that will be interpreted as the end of the
CDATA section. ]]></overview> 
        <prim name="convMat" value="Pb" type="string" uType="mat">material used in tracker conversion
</prim>
        <prim name="coreMat" value="FOAM05" type="string" uType="mat">material used in tracker tray core</prim>
        <prim name="convThickReg" value="0.14">Thickness of conversion material in "regular" layers in mm (.025 * 5.6)
</prim>
        <prim name="convThickSup" value="1.4">Thickness of conversion material in super-GLAST layers in mm (.25 * 5.6)
</prim>
        <prim name="TKRDetMat" value="Si" type="string" uType="mat">Material of tracker detector elements
</prim>
        <prim name="TKRFaceMat" value="C" type="string" uType="mat">Material of tracker face sheet
</prim>
	<prim name="traySpacing" value="32.0">Center-to-center distance between trays
</prim>
        <prim name="guardRing" value="0.8">guard ring size (superseded/obsolete?)
</prim>
        <prim name="ssdGap" value="0.1">gap between Si dies (superseded/obsolete?)
</prim>
	<prim name="SiWaferSide" value="89.5">Length and width of Si wafer</prim>
        <prim name="SiWaferActiveSide" value="87.552">Length and width of active
area on a wafer</prim>
	<prim name="stripPerWafer"  value="384" uType="count">Number of strips per wafer</prim>
<prim name="nWaferAcross" value="4" uType="count"> Wafers for a layer within a tower
form a square array of this dimension</prim>
<!-- NB Maintainers - The following constants defining the layout of
     lead in the trays do not  propagate to the section of the
     file which describes the trays.  They merely act as documentation.
     At best, the code interpreting this file could check that the
     description of tracker volumes below is in accord with the 
     numbers.  In particular, 
       ** any change to numTrays, numNoLeadTrays or numSuperGlast
       ** will entail changes to the definition of the 
       ** tracker volumes.
 -->
        <prim name="numTrays" value="19" uType="count">number of trays (one more than number of x-y planes)</prim>
        <prim name="numNoLeadTrays" value="3" uType="count">number of trays with no lead.  These trays have the lowest tray number</prim>
        <prim name="numSuperGlast" value="4" uType="count">number of trays with super-Glast thickness lead.  These are immediately above the no-lead trays</prim>
        <prim name= "SiThick" value= "0.4" >Si thickness
</prim>
        
        <prim name= "TKRWidth" value= "389.7">**Is this just a replacement for wallWidth?
</prim>  
        <prim name= "TKRElectGap" value= "4.7">**Insert comment here**
</prim>
        <prim name= "faceThick" value= "0.2">**insert comment here**
</prim>
        <prim name= "panelThick" value= "28.8">Thickness of converter + core??
</prim>
        <prim name="nFeChips" value="7" uType="count">Number of front-end readout strips per die
(determines number of Si strips)
</prim>

      </primCategory>

      <primCategory name="ACDprim" >
<overview><![CDATA[ACD people should review this to make sure 
constants from Heather's note have been transcribed correctly.
Note <font color="#ff0000">some of these values are invented and
need to be replaced with something real</font>, in particular we're missing
a sensible number for ACDSupportThickness and a real  support material.
 ]]></overview> 
        <prim name="tileMat" value="Polystyrene" type="string" uType="mat">material used for tiles
</prim>
        <prim name="tileThickness" value="10.0">Thickness of ACD tiles</prim>
<prim name="ACDSupportMat" value="someStuff" type="string" uType="mat">
Material of ACD support.  Still need input from engineers about this.</prim>
        <prim name="ACDSupportThickness" value="20.0">This is just a figment
of my imagination.  I have no real number yet.</prim>
        <prim name="ACDSideStandoff" value="35.75">This one is right if
side_standoff is another name for side_tile_standoff, the distance
between the side of the tracker and the ACD tiles</prim>
        <prim name="totalTopAvail" value="91.9">This is the total amount of space
    available to top section of the ACD, includes tiles and support structure
(Heather).</prim>
        <prim name="topTileGap" value="3.0">Worst-case (most thermal expansion)
gap between tiles on the top</prim>
        <prim name="numXTopTiles" value="5" uType="count">Number of tiles
across top in x direction</prim>
        <prim name="numYTopTiles" value="5" uType="count">Number of tiles
across top in y direction</prim>
         <prim name="topStandoff" value="10.0"> distance between
ACD top and top of TKR</prim>
       <prim name="topOverlap" value="10.0">Width of overlap
of overlapped top tiles</prim>
        <prim name="numSideTapes" value="4" uType="count">Number of
gaps (long axis = Z) to be covered by scintillating tape on each side
o the ACD.  Should this be derived from #tiles in some side row?</prim>

<!-- side stuff -->
        <prim name="totalSideAvail" value="52.0">Total amount of
space available for side section of ACD, including both tiles and
support structure</prim>
        <prim name="numSideRows" value="4" uType="count">Number of rows of 
tiles along the sides</prim>
        <prim name="numPerSideRowShort" value="5" uType="count">Number of
  tiles in some (currently upper two) side rows</prim>
        <prim name="numPerSideRowLong" value="10" uType="count">Number of
  tiles in some (currently lower two) side rows</prim>
        <prim name="sideTileHeight0" value="250.0">Height of top row 
of side tiles</prim>
        <prim name="sideTileHeight1" value="200.0">Height of 2nd row 
of side tiles</prim>
        <prim name="sideTileHeight2" value="150.0">Height of 3rd row 
of side tiles</prim>
        <prim name="sideTileHeight3" value="150.0">Height of 4th row 
of side tiles</prim>
        <prim name="sideOverlap" value="30.0">Distance side tiles
extend above topACD tile surface --- used for positioning</prim>
        <prim name="sideVerticalGap" value="0.0.">Vertical gap
between (rows of?) side tiles</prim>
        <prim name="sideHorizontalGap" value="3.0">Horizontal
gap at the corners between adjacent sides of tiles</prim>

<!-- tape stuff -->
        <prim name="tapeMat" value="Polystyrene" type="string" uType="mat">
Material for scintillating tape</prim>
        <prim name="tapeThickness" value="2.0">Thickness of scintillating
tape</prim>
        <prim name="tapeWidth" value="10.0">Width of scintillating tape</prim>
        <prim name="tapeTopExt" value="15.0">Distance tape should extend
beyond the end of a top tile (see Heather's first diagram)</prim>
        <prim name="tapeGap" value= "1.0" >Distance between the tape and the adjacent
ACD tile</prim>
      </primCategory>
    </primary>

    <derived>
      <derCategory name="derAll">
<overview>It's OK to add some overview information for derived categories,
too, but not required.</overview>

    <!-- diodePosXOffset  = (CsILength + diodeX)/2 -->
        <const name="diodePosXOffset" >
          <quo>
            <add>
              <refer refTo="CsILength" />
              <refer refTo="diodeX" />
            </add>
            <const value="2" uType="count"/>
          </quo>
        </const>
        <const name="diodeNegXOffset" >
          <uminus><refer refTo="diodePosXOffset" /> </uminus>
        </const>

        <const name= "CALHalfGap">
          <mul> 
            <refer refTo="CALGap" /> 
            <const value="0.5" uType="count" /> 
          </mul>
        </const>


<!-- dimensions for log envelope volume -->
        <const name="CsIEnvX">  
          <add>
            <refer refTo="CsILength" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="diodeX" />
            </mul>
          </add>
        </const>

        <const name="CsIEnvY">  
          <add>
            <refer refTo="CsITrans" />
            <refer refTo="CALGap" />
          </add>
        </const>

        <const name = "CsIEnvZ" >
          <add>
            <refer refTo="CsIZ" />
            <refer refTo="CALGap" />
          </add>
        </const>

<!-- the following should be the maximum of the length of a single
     CsIElement and the transverse distance across the whole 
     collection of CsIElements in a layer, so
      max(CsIEnvX, nEltPerLayer*CsIEnvY), which ends up being
      CsIEnvX in this case    --> 
        <const name = "CALLayerTrans" >
          <max>
            <refer refTo="CsIEnvX" />
            <mul>
              <refer refTo="nEltPerLayer" />
              <refer refTo="CsIEnvY" />
            </mul>
          </max>
	</const>

<!-- the following includes cal layers and inter-layer spacers, but
     not frame, grid between cal and tkr, etc. 
     Hence it's nlayer*CsIEnvZ + (nlayer - 1)*CALInterLayer or
     nLayer*(CsIEnvZ + CALInterLayer) - CALInterLayer = 19.306 -->
        <const name="CALTotalZ">
          <minus>
            <mul>
              <refer refTo="nLayer" />
              <add>
                <refer refTo="CsIEnvZ" />
                <refer refTo="CALInterLayer" />
              </add>
            </mul>
            <refer refTo="CALInterLayer" />
          </minus>
        </const>

    <!-- additional (derived) dimensions for frame -->
        <const name = "CALFrameWidth">
          <add>
            <refer refTo="CALLayerTrans" />
            <mul>
              <const value="2" uType="count"/>
              <refer refTo="CALFrameSideThick" />
            </mul>
          </add>
        </const>
  
    <!--  Height of side pieces is just CALTotalZ -->

    <!-- Height of entire frame must also include thickness of top&bottom -->
	<const name="CALFrameHeight"  >
	  <add>
	    <refer refTo="CALTotalZ" />
	    <mul>
	      <const value="2" uType="count"/>
	      <refer refTo="CALFrameTBThick" />
	    </mul>
	  </add>
	</const>

	<const name = "CALFrameSideDsp"> 
	  <mul>
	    <add>
	      <refer refTo="CALFrameSideThick" />
	      <refer refTo= "CALFrameWidth" />
	    </add>
	    <const value="0.5" uType="count" />
	  </mul>
	</const>

	<const name ="CALFrameSideDspN" >
	  <uminus>
	    <refer refTo="CALFrameSideDsp" />
	  </uminus>
	</const>

	<const name="CALFrameTBDsp" > 
	  <mul>
	    <add>
	      <refer refTo= "CALFrameTBThick" />
	      <refer refTo="CALTotalZ" />
	    </add>
	    <const value="0.5" uType="count"/>
	  </mul>
	</const>
	    
	<const name="CALFrameTBDspN" >
	  <uminus>
	    <refer refTo="CALFrameTBDsp" />
	  </uminus>
	</const>

	<const name="TKRTrayWidth" >
	  <minus>
	    <refer refTo="TKRWidth" />
	    <mul>
	      <const value="2" uType="count"/>
	      <refer refTo="TKRElectGap" />
	    </mul>
	  </minus>
	</const>

	<const name="coreThickReg" > <!--    panelthick-convThickReg  -->
	  <minus>
	    <refer refTo="panelThick" />
	    <refer refTo="convThickReg" />
	  </minus>
	</const>

	<const name = "coreThickSuper"  > <!--  panelthick-convThickSuper -->
	  <minus>
	    <refer refTo="panelThick" />
	    <refer refTo="convThickSup" />
	  </minus>
	</const>

        <!-- total Z dimension of top and bottom trays -->
	<const name = "outsideTrayZ">
	  <add>
	    <refer refTo = "panelThick" />
            <refer refTo = "faceThick" />
            <refer refTo = "faceThick" />
	    <refer refTo = "SiThick" />
	  </add>
	</const>

	<!-- total Z dimension of middle trays -->
	<const name = "middleTrayZ">
	  <add>
	    <refer refTo = "outsideTrayZ" />
	    <refer refTo = "SiThick" />
	  </add>
	</const>

	<!-- gap between outside and middle tray -->
	<const name = "outerInterTrayGap">
	  <minus>
	    <refer refTo="traySpacing" />
	    <mul>
	      <const value=".5" uType="count" />
	      <add>
		<refer refTo="outsideTrayZ" />
		<refer refTo="middleTrayZ" />
	      </add>
	    </mul>
	  </minus>
	</const>

<!-- gap between two inside trays -->
	<const name = "innerInterTrayGap">
	  <minus>
	    <refer refTo="traySpacing" />
	    <refer refTo="middleTrayZ" />
	  </minus>
	</const>
<!-- a couple convenience numbers -->
        <const name="xNumM1">
          <minus>
            <refer refTo="xNum" />
            <const value="1.0" />
          </minus>
        </const>
        <const name="yNumM1">
          <minus>
            <refer refTo="yNum" />
            <const value="1.0" />
          </minus>
        </const>

<!-- These might not be quite right.  Check that frame is
     accounted for. -->
	<const name="totalX">
          <add>
            <mul>
              <refer refTo="xNum" />
              <refer refTo="modWidth" />
            </mul>
            <mul>
              <refer refTo="xNumM1" />
              <add>
                <refer refTo="wallThickness" />
                <refer refTo="wallGap" />
              </add>
            </mul>
          </add>
        </const>

	<const name="totalY">
          <add>
            <mul>
              <refer refTo="yNum" />
              <refer refTo="modWidth" />
            </mul>
            <mul>
              <refer refTo="xNumM1" />
              <add>
                <refer refTo="wallThickness" />
                <refer refTo="wallGap" />
              </add>
            </mul>
          </add>
        </const>

<!-- Compute total Z by adding up
            CAL height
            cal-tracker gap
            (ntray-1)* inter-tray spacing
            Z of top half of top tray, bottom half of bottom tray
              (which is the same as Z of a single outer tray)
-->
	<const name="totalZ">  
          <add>
            <refer refTo="CALFrameHeight" />
            <refer refTo="cal_tracker_gap" />
            <mul>                           
              <minus>
                <refer refTo="numTrays" />
                <const value="1" />
              </minus>
              <refer refTo="traySpacing" />
            </mul>
            <refer refTo="outsideTrayZ" />  
          </add>                               
        </const>

<!-- start ACD stuff -->
<!-- Total X, Y widths to be covered by top tiles -->
        <const name="ACDTopTotalX">
          <add>
            <refer refTo="totalX" />
            <mul>
              <const value="2.0" />
              <refer refTo="ACDSideStandoff" />
            </mul>
          </add>
        </const>

        <const name="ACDTopTotalY">
          <add>
            <refer refTo="totalY" />
            <mul>
              <const value="2.0" />
              <refer refTo="ACDSideStandoff" />
            </mul>
          </add>
        </const>

<!-- X dimension for a top tile. Must be derived from total width top
      and other things  -->
        <const name="ACDTopXWidth">
          <quo>
            <add>
              <refer refTo="ACDTopTotalX"/>
              <mul>
                <minus>
                  <refer refTo="numXTopTiles" />
                  <const value="1.0" />
                </minus>
                <refer refTo="topOverlap" />
              </mul>
              <mul>
                <const value="2.0" />
                <minus>
                  <refer refTo="ACDSupportThickness" />
                  <refer refTo="topTileGap" />
                </minus>
              </mul>
            </add>
            <refer refTo="numXTopTiles" />
          </quo>
        </const>

<!-- and similarly for y but no overlap to contend with, more gaps -->
        <const name="ACDTopYWidth">
          <quo>
            <add>
              <refer refTo="ACDTopTotalY"/>
              <uminus>
                <mul>
                  <add>
                    <const value="1.0" />
                    <refer refTo="numYTopTiles" />
                  </add>
                  <refer refTo="topTileGap" />
                </mul>
              </uminus>

            </add>
            <refer refTo="numYTopTiles" />
          </quo>
        </const>

<!-- Compute Z for the smallest box containing the top tiles + tape.
     From Heather's first diagram, this is

      3*tileThickness + tapeGap + tapeThickness

     May have to do this over for a box containing support as well,
     but so far have no information for support                   -->
        <const name="ACDTopZwidth" >
          <add>
            <mul>
              <const value="3" />
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="tapeGap" />
            <refer refTo="tapeThickness" />
          </add>
        </const>

<!-- following are convenient to have.. -->
        <const name="ACDTopZHalfWidth" >
          <quo>
            <refer refTo="ACDTopZwidth" />
            <const value="2.0" />
          </quo>
        </const>

        <const name="tapeHalfThickness" >
          <quo>
            <refer refTo="tapeThickness" />
            <const value="2.0" />
          </quo>
        </const>
<!-- thickness of side tiles + tape -->
        <const name="ACDSideThick">
          <add>
            <refer refTo="tileThickness" />
            <refer refTo="tapeThickness" />
            <refer refTo="tapeGap" />
          </add>
        </const>

<!-- total length (in x direction) to be covered by a row of side tiles -->
        <const name="ACDTotalXSide" >
          <add>
            <refer refTo="totalX" />
            <mul>
              <const value="2.0" />
              <add>
                <refer refTo="ACDSideStandoff" />
                <refer refTo="ACDSupportThickness" />
              </add>
            </mul>
            <refer refTo="tileThickness" />
          </add>
        </const>

        <!-- to get width of an individual tile, take account of
              number of tiles in a row (and number of gaps) -->
        <const name="sideTileWidthShortXRow">
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongXRow">
          <quo>
            <minus>
              <refer refTo="ACDTotalXSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>

<!-- Now do same for Y-direction -->
        <const name="ACDTotalYSide" >
          <add>
            <refer refTo="totalY" />
            <mul>
              <const value="2.0" />
              <add>
                <refer refTo="ACDSideStandoff" />
                <refer refTo="ACDSupportThickness" />
              </add>
            </mul>
            <refer refTo="tileThickness" />
          </add>
        </const>

        <const name="ACDSideHeight" >
          <add>
            <refer refTo="sideTileHeight0" />
            <refer refTo="sideTileHeight1" />
            <refer refTo="sideTileHeight2" />
            <refer refTo="sideTileHeight3" />
            <mul>
              <minus>
                <refer refTo="numSideRows" />
                <const value="1.0" />
              </minus>
              <refer refTo="sideVerticalGap" />
            </mul>
          </add>
        </const>

        <!-- to get width of an individual tile, take account of
              number of tiles in a row (and number of gaps) -->
        <const name="sideTileWidthShortYRow">
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowShort" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowShort" />
          </quo>
        </const>

        <const name="sideTileWidthLongYRow">
          <quo>
            <minus>
              <refer refTo="ACDTotalYSide" />
              <mul>
                <refer refTo="numPerSideRowLong" />
                <refer refTo="sideHorizontalGap" />
              </mul>
            </minus>
            <refer refTo="numPerSideRowLong" />
          </quo>
        </const>
<!-- end Y side tile calculations -->

<!-- heights of tiles on both X and Y sides are the same: -->
        <const name="sideTileRow0_d">
          <quo>
            <minus>
              <refer refTo="ACDSideHeight" />
              <refer refTo="sideTileHeight0" />
            </minus>
            <const value="2" />
          </quo>
        </const>

        <const name="sideTileRow1_d">
          <minus>
            <refer refTo="sideTileRow0_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight1" />
                  <refer refTo="sideTileHeight0" />
                </add>
                <const value="2" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow2_d">
          <minus>
            <refer refTo="sideTileRow1_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight2" />
                  <refer refTo="sideTileHeight1" />
                </add>
                <const value="2" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="sideTileRow3_d">
          <minus>
            <refer refTo="sideTileRow2_d" />
            <add>
              <refer refTo="sideVerticalGap" />
              <quo>
                <add>
                  <refer refTo="sideTileHeight3" />
                  <refer refTo="sideTileHeight2" />
                </add>
                <const value="2" />
              </quo>
            </add>
          </minus>
        </const>

<!-- Now some stuff involving the ACD tape -->
        <const name="tapeSideLength">
          <refer refTo="ACDSideHeight" />
        </const>

<!-- lengths of tape convering gaps in the top.  There are 3 different
     lengths to deal with the fact that tiles in different top
     rows are obsucured differeng amounts by overlap.  The longest
     tape goes over the outermost tiles, the shortest across the
     central row.  See Heather's first diagram
     -->
        <const name="topTapeLenLong" >
          <add>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="tapeTopExt" />
          </add>
        </const>
        <const name="topTapeLenMedium" >
          <minus>
            <refer refTo="topTapeLenLong" />
            <refer refTo="topOverlap" />
          </minus>
        </const>
        <const name="topTapeLenShort">
          <minus>
            <refer refTo="ACDTopXWidth" />
            <mul>
              <const value="2.0" />
              <refer refTo="topOverlap" />
            </mul>
          </minus>
        </const>

<!-- Tapes on top come in rows, similar to rows of tiles, except there
     is one less piece of tape than there are tiles in a row -->
        <const name="topTapesPerRow">
          <minus>
            <refer refTo="numYTopTiles" />
            <const value="1" />
          </minus>
        </const>

        <const name="topTapeGap" >
          <add>
            <refer refTo="ACDTopYWidth" />
            <refer refTo="topTileGap" />
            <uminus>
              <refer refTo="tapeWidth" />
            </uminus>
          </add>
        </const>

<!-- Need to compute a bunch of displacements of top tapes relative to
     the "top ACD" envelope.  First do X, then Z.  Y displacements are
     all zero.  -->
        <const name="topTapeX4_d">
          <mul>
            <const value="0.5" />
            <minus>
              <refer refTo="ACDTopTotalX" />
              <refer refTo="topTapeLenLong" />
            </minus>
          </mul>
        </const>
        <const name="topTapeX3_d" >
          <mul>
            <const value="0.5" />
            <add>
              <refer refTo="topTapeLenShort" />
              <refer refTo="topTapeLenMedium" />
            </add>
          </mul>
        </const>
        <const name="topTapeX2_d" value="0.0" />
        <const name="topTapeX1_d">
          <uminus>
            <refer refTo="topTapeX3_d" />
          </uminus>
        </const>
        <const name="topTapeX0_d">
          <uminus>
            <refer refTo="topTapeX4_d" />
          </uminus>
        </const>

        <const name="topTapeZLong_d" >
          <minus>
            <refer refTo="ACDTopZHalfWidth" />
            <refer refTo="tapeHalfThickness" />
          </minus>
        </const>

        <const name="topTapeZMedium_d" >
          <minus>
            <refer refTo="topTapeZLong_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTapeZShort_d" >
          <minus>
            <refer refTo="topTapeZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <!-- z-displacement for top tiles 
                 edge == rows 0 and 4, on the edge of the top
                 medium == rows 1 and 3
                 center == row 2   -->
        <const name="topTileZEdge_d" >
          <minus>
            <mul>
              <const value="2.5" />
              <refer refTo="tileThickness" />
            </mul>
            <refer refTo="ACDTopZHalfWidth" />
          </minus>
        </const>

        <const name="topTileZMedium_d" >
          <minus>
            <refer refTo="topTileZEdge_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <const name="topTileZCenter_d" >
          <minus>
            <refer refTo="topTileZMedium_d" />
            <refer refTo="tileThickness" />
          </minus>
        </const>

        <!-- middle row is centered in X -->
        <const name="topTileX2_d"  value="0" />

        <const name="topTileX3_d" >
          <minus>
            <refer refTo="ACDTopXWidth" />
            <refer refTo="topOverlap" />
          </minus>
        </const>

        <const name="topTileX4_d" >
          <mul>
            <const value="2" />
            <refer refTo="topTileX3_d" />
          </mul>
        </const>

        <const name="topTileX0_d" >
          <uminus>
            <refer refTo="topTileX4_d" />
          </uminus>
        </const>

        <const name="topTileX1_d" >
          <uminus>
            <refer refTo="topTileX3_d" />
          </uminus>
        </const>

        <const name="betweenSideTapesX" >
          <minus>
            <refer refTo="sideTileWidthShortXRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

        <const name="betweenSideTapesY" >
          <minus>
            <refer refTo="sideTileWidthShortYRow" />
            <refer refTo="tapeWidth" />
          </minus>
        </const>

      </derCategory>
    </derived>
  </constants>

  <section name="towers"
           version="1.0" date="2001/1/4" author="J.Bogart"
           topVolume="towers16" >
    <!-- "towers" is made up of 16 "tower" s.
         Each "tower" has a tracker, a calorimeter, and a mechanical
         piece inbetween. (what about electronics?)
         Each tracker consists of trays
         Each tray has 1 (iff top or bottom) or 2 layers of silicon
         and most trays also have a converter layer (can be of
         two possible thicknesses. -->
    <!-- Use conventions as laid out in Steve Ritz's memo.  Z is
    up (perp. to cal. layers and tracker trays).  An "x-strip"
    is one that measures the x-coordinate of the hit, hence its
    length is parallel to the y-axis.  An "x-log", on the other
    hand, has its long axis parallel to the x-axis (but there 
    is some consistency here: logs make their most precise 
    measurement in the direction parallel to their length.) 
    
    Cal layer numbers increase from the front (largest Z value,
    which is 0 for the Cal) to the back (smallest Z).  Layer 0 
    has x-logs;  layer 7, the last layer, has y-logs.  
    
    Tracker trays and layers are numbered from back to front,
    i.e. increase with increasing Z.  All strips associated
    with a tray (i.e., front side and back side, if the tray 
    is one that has both) have the same orientation.  Even-numbered
    trays have Y-strips and odd-numbered trays have X-strips.

    (As of March 1, 2001, had to eliminate the convenience idField
     for orientation of trays and cal layers.  This information can
     still be deduced from the rotation attribute of the positioning
     element
    -->
    
    <box name="towers16" 
         XREF="totalX" YREF="totalY" ZREF="totalZ"
         materialREF = "vacuumMat" />
    
    <!-- According to conventions above, an unrotated CsIDetector would
    be an X-log -->
    <box name="CsIDetector" 
         sensitive="true"
         XREF="CsILength" YREF="CsITrans" ZREF="CsIZ"
         materialREF="crystalMat"  >
      <seg axis="X" nSeg="10" reason="energyAcct" />
    </box>

<!-- there are two kinds of diodes: large and small. See diode section of
     instrument.xml.   These
     diode boxes or oriented the same way as the unrotated CsIDetector
     above.  Old names for x,y,z dimensions were respectively
     thickness,x_width,y_width   -->
    <box name="diodeL"
         sensitive="true"
         XREF="diodeX"     
         YREF="diodeY"
         ZREF="diodeLZ"          
         materialREF="diodeMat" />
    <box name="diodeS"
         sensitive="true"
         XREF="diodeX"     
         YREF="diodeY"
         ZREF="diodeSZ"          
         materialREF="diodeMat" />

    <box name="CsIElementEnv"
         materialREF="CALWrapMat"
         XREF="CsIEnvX"
         YREF="CsIEnvY"
         ZREF="CsIEnvZ"/>

    <!-- This name comes from GlastSim code. -->
    <composition name="CsIElement"  envelope="CsIElementEnv">
      <posXYZ volume="CsIDetector" />  <!-- centered in envelope -->
      <posXYZ volume="diodeS" 
              XREF="diodeNegXOffset"
              YREF="diodeYOffset"
              ZREF="diodeSZOffset"
        >
        <idField name="diode" value="&dminusSmall;" />
      </posXYZ>
      <posXYZ volume="diodeS" 
              XREF="diodePosXOffset"
              YREF="diodeYOffset"
              ZREF="diodeSZOffset"
        >
        <idField name="diode" value="&dplusSmall;" />
      </posXYZ>
      <posXYZ volume="diodeL" 
              XREF="diodeNegXOffset"
              YREF="diodeYOffset"
              ZREF="diodeLZOffset"
        >
        <idField name="diode" value="&dminusLarge;" />
      </posXYZ>
      <posXYZ volume="diodeL" 
              XREF="diodePosXOffset"
              YREF="diodeYOffset"
              ZREF="diodeLZOffset"
        >
        <idField name="diode" value="&dplusLarge;" />
      </posXYZ>
    </composition>

    <!-- make a layer out of some evenly-spaced CsIElements -->
    <stackY name="CALLayer" >
      <axisMPos volume="CsIElement" ncopyREF="nEltPerLayer"
                gapREF="CALGap" >
        <idField name="xtal" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- Need to define spacer box between layers -->
    <box name="CALSpace"
         XREF="CALLayerTrans"
         YREF="CALLayerTrans"
         ZREF="CALInterLayer"
         materialREF="CALSpaceMat"
         />

<!-- intersperse log layers with calSpace boxes.  Volumes get
     added with increasing Z, so we're starting at the back
     with layer 7 (a Y-layer) and working our way forward to
     layer 0, an X layer.  The Y-layers must be rotated -->
    <stackZ name="CALLayers"  >
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="layer" value="7" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="layer" value="6" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="layer" value="5" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="layer" value="4" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="layer" value="3" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="layer" value="2" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer" rotation="90" >
        <idField name="layer" value="1" />
      </axisPos>
      <axisPos volume="CALSpace" />
      <axisPos volume="CALLayer"  >
        <idField name="layer" value="0" />
      </axisPos>
    </stackZ>

    <!-- Calorimeter for a tower consists of layers plus frame pieces -->
    <!-- Can just embed layers stack into box of frame material -->
    <box name="oneCALEnv"
         XREF="CALFrameWidth"
         YREF="CALFrameWidth"
         ZREF="CALFrameHeight"
         materialREF="CALFrameMat"
         />
    <composition name="oneCAL" envelope="oneCALEnv" >
      <posXYZ volume="CALLayers" />  <!-- centered in envelope -->
    </composition>


<!-- Tracker stuff.  The tracker consists of trays.  Alternate trays
     are rotated by 90 degrees with just vacuum inbetween.  But
     the rotation is not apparent to the simulator since it
     doesn't know about individual strips  -->
<!-- Trays come in 3 flavors: top tray, bottom tray and middle tray.
     These are further subdivided by thickness of converter layer which
     may be any of 
          no converter (bottom and middle trays only)
          super-GLAST thickness (middle only)
          "normal" thickness (middle and top only)  -->
    <box name="convReg" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth" 
	 ZREF="convThickReg"
	 materialREF="convMat" />
    <box name="convSuper" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="convThickSup" 
	 materialREF="convMat" />
    <box name="TKRCoreReg"
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth" 
	 ZREF="coreThickReg" 
	 materialREF="coreMat" />
    <box name="TKRCoreSuper" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="coreThickSuper" materialREF="coreMat" />
    <box name="TKRCoreNoConv" 
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="panelThick" materialREF="coreMat" />

<!-- Instead of defining a silicon box, should perhaps make
     a composition or stack(s) defining internal structure
     of ladders and strips.
  -->
    <box name="SiLayerBox"
         sensitive="true"  
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth"
	 ZREF="SiThick" materialREF="TKRDetMat" />

    <choice name="SiLayer" >  
      <case mode="propagate" volume="SiLayerBox" />
      <case mode="digi recon" volume="SiLayerComp" />
    </choice>

  <!-- No explicit material, so vacuum -->
    <box name="SiLayerEnv"    
      XREF="TKRTrayWidth"
      YREF="TKRTrayWidth"
      ZREF="SiThick" 
      materialREF="vacuumMat"/>

<!-- The unrotated wafer is segmented along the x axis, hence measures X,
     hence is an X layer -->
    <box name="SiWaferActive"
         sensitive="true"
	 XREF="SiWaferActiveSide"
	 YREF="SiWaferActiveSide"
	 ZREF="SiThick"
	 materialREF="TKRDetMat">
      <seg axis="X" reason="readout" nSegREF="stripPerWafer" />
    </box>

    <box name="SiWafer"
	 XREF="SiWaferSide"
	 YREF="SiWaferSide"
	 ZREF="SiThick"
	 materialREF="TKRDetMat">
    </box>

    <composition name="SiWaferNest" envelope="SiWafer">
      <posXYZ volume="SiWaferActive" />
    </composition>
    
<!-- identify wafers by their position along stack in direction
     of measurement.                                          
     strip id in glastsim style is then 
           local(in wafer)-strip# + strips-per-wafer * wafer-id
 -->
    <stackX name="waferRow" origin="atCentre" >
      <axisMPos volume="SiWaferNest" ncopyREF="nWaferAcross">
        <idField name="wafer" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackY name="towerLayerWafers" origin="atCentre" >
      <axisMPos volume="waferRow" ncopyREF="nWaferAcross"/>
    </stackY>

<!-- The collection of wafers is centered in the volume -->
    <composition name="SiLayerComp" envelope="SiLayerEnv">
      <posXYZ volume="towerLayerWafers" />
    </composition>

    <box name="TKRFaceSheet"  
	 XREF="TKRTrayWidth" 
	 YREF="TKRTrayWidth" 
	 ZREF="faceThick" materialREF="TKRFaceMat" />

    <!-- Make a stack for the bottom tray -->
    <stackZ name="trayBot" >
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="TKRCoreNoConv" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="1" /> <!-- 1 means top -->
      </axisPos>
    </stackZ>

    <!-- Stack for middle no-lead trays -->
    <stackZ name="trayNoConv" >
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="0" /> <!-- 0 means bottom -->
      </axisPos>
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="TKRCoreNoConv" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="1" /> <!-- 1 means top -->
      </axisPos>
    </stackZ>

    <!-- stack for super-GLAST layers -->
    <stackZ name="traySuper" >
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="0" /> <!-- 0 means bottom -->
      </axisPos>
      <axisPos volume="convSuper" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="TKRCoreSuper" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="1" /> <!-- 1 means top -->
      </axisPos>
    </stackZ>

    <!-- Regular trays other than top -->
    <stackZ name="trayReg" >
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="0" /> <!-- 0 means bottom -->
      </axisPos>
      <axisPos volume="convReg" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="1" /> <!-- 1 means top -->
      </axisPos>
    </stackZ>

    <!-- top tray -->
    <stackZ name="trayTop" >
      <axisPos volume="SiLayer" >
	<idField name="SiPosition" value="0" /> <!-- 0 means bottom -->
      </axisPos>
      <axisPos volume="convReg" />
      <axisPos volume="TKRFaceSheet" />
      <axisPos volume="TKRCoreReg" />
      <axisPos volume="TKRFaceSheet" />
    </stackZ>

    <!-- make a tracker by stacking up the trays -->
    <stackZ name="oneTKR" >
      <axisPos volume="trayBot" rotation="90" >
	<idField name="tray" value="0" />
      </axisPos>
      <axisPos volume="trayNoConv" gapREF="outerInterTrayGap" >
	<idField name="tray" value="1" />
      </axisPos>
      <axisPos volume="trayNoConv" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="2" />
      </axisPos>
      <axisPos volume="traySuper" gapREF="innerInterTrayGap" >
	<idField name="tray" value="3" />
      </axisPos>
      <axisPos volume="traySuper" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="4" />
      </axisPos>
      <axisPos volume="traySuper" gapREF="innerInterTrayGap" >
	<idField name="tray" value="5" />
      </axisPos>
      <axisPos volume="traySuper" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="6" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="7" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="8" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="9" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="10" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="11" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="12" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="13" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="14" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="15" />
      </axisPos>
      <axisPos volume="trayReg" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="16" />
      </axisPos>
      <axisPos volume="trayReg" gapREF="innerInterTrayGap" >
	<idField name="tray" value="17" />
      </axisPos>
      <axisPos volume="trayTop" rotation="90" gapREF="innerInterTrayGap" >
	<idField name="tray" value="18" />
      </axisPos>

    </stackZ>

<!-- next need to put together oneCAL and oneTKR with necessary
     structural stuff to make a tower.  Front plane of grid
     defines Z = 0 (Steve Ritz memo) -->

  </section>

  <section name="ACDsect"
           version="1.0" date="2001/3/2" author="J.Bogart"
           topVolume="ACDTop" >     <!-- Temporary!! -->
    <box name="topTile" 
         XREF="ACDTopXWidth"
         YREF="ACDTopYWidth"
         ZREF="tileThickness"
         materialREF="tileMat"
         sensitive="true" />

<!-- different box needed for each of the 4 rows of side tiles on X sides 
     and Y sides (X and Y sides happen to have same dimensions now,
      but allow for difference -->
    <box name="sideTileX0" 
         XREF="sideTileWidthShortXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight0"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX1" 
         XREF="sideTileWidthShortXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight1"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX2" 
         XREF="sideTileWidthLongXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight2"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileX3" 
         XREF="sideTileWidthLongXRow"
         YREF="tileThickness"
         ZREF="sideTileHeight3"
         materialREF="tileMat"
         sensitive="true" />

   <!--   ..and Y sides (X and Y sides happen to have same dimensions now,
      but allow for difference -->
    <box name="sideTileY0" 
         XREF="sideTileWidthShortYRow"
         YREF="tileThickness"
         ZREF="sideTileHeight0"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY1" 
         XREF="sideTileWidthShortYRow"
         YREF="tileThickness"
         ZREF="sideTileHeight1"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY2" 
         XREF="sideTileWidthLongYRow"
         YREF="tileThickness"
         ZREF="sideTileHeight2"
         materialREF="tileMat"
         sensitive="true" />
    <box name="sideTileY3" 
         XREF="sideTileWidthLongYRow"
         YREF="tileThickness"
         ZREF="sideTileHeight3"
         materialREF="tileMat"
         sensitive="true" />

<!-- boxes for tape on the top.  Long dimension of tape is 
     parallel to X-axis -->
    <box name="topTapeLong"
         XREF="topTapeLenLong"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />
    <box name="topTapeMedium"
         XREF="topTapeLenMedium"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />
    <box name="topTapeShort"
         XREF="topTapeLenShort"
         YREF="tapeWidth"
         ZREF="tapeThickness"
         materialREF="tapeMat"
         sensitive="true" />

<!-- Boxes for tape on sides.  Definition is for a side parallel to
     X-axis.  Rotate 90 deg. about Z for Y-side  -->
    <box name="sideTape"
         XREF="tapeWidth"
         YREF="tapeThickness"
         ZREF="tapeSideLength"
         materialREF="tapeMat"
         sensitive="true" />

<!-- Make a row of top tiles.  They're all the same.  Since this
     represents a row of tiles, ids of individual tiles in the row
     differ by which column they're in; hence we have idField "col"
     set here.
     The long axis of the top rows (tape or tiles) is || to the
     Y axis -->
    <stackY name="topTileRow" >
      <axisMPos volume="topTile"
                ncopyREF="numYTopTiles"
                gapREF="topTileGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- Make rows for X sides -->
    <stackX name="sideTileRowX0" >
      <axisMPos volume="sideTileX0"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackX name="sideTileRowX1" >
      <axisMPos volume="sideTileX1"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackX>

<!-- have to do bottom side rows tile by tile since gaps are not uniform -->
    <stackX name="sideTileRowX2" >
      <axisPos volume="sideTileX2">
        <idField name="col" value="0" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="col" value="1" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="2" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="col" value="3" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="4" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="col" value="5" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="6" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="col" value="7" />
      </axisPos>
      <axisPos volume="sideTileX2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="8" />
      </axisPos>
      <axisPos volume="sideTileX2">
        <idField name="col" value="9" />
      </axisPos>
    </stackX>

    <stackX name="sideTileRowX3" >
      <axisPos volume="sideTileX3">
        <idField name="col" value="0" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="col" value="1" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="2" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="col" value="3" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="4" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="col" value="5" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="6" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="col" value="7" />
      </axisPos>
      <axisPos volume="sideTileX3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="8" />
      </axisPos>
      <axisPos volume="sideTileX3">
        <idField name="col" value="9" />
      </axisPos>
    </stackX>

<!-- Do same for Y sides -->
    <stackY name="sideTileRowY0" >
      <axisMPos volume="sideTileY0"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="sideTileRowY1" >
      <axisMPos volume="sideTileY1"
                ncopyREF="numPerSideRowShort"
                gapREF="sideHorizontalGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

<!-- have to do bottom side rows tile by tile since gaps are not uniform -->
    <stackY name="sideTileRowY2" >
      <axisPos volume="sideTileY2">
        <idField name="col" value="0" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="col" value="1" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="2" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="col" value="3" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="4" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="col" value="5" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="6" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="col" value="7" />
      </axisPos>
      <axisPos volume="sideTileY2"
               gapREF="sideHorizontalGap">
        <idField name="col" value="8" />
      </axisPos>
      <axisPos volume="sideTileY2">
        <idField name="col" value="9" />
      </axisPos>
    </stackY>

    <stackY name="sideTileRowY3" >
      <axisPos volume="sideTileY3">
        <idField name="col" value="0" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="col" value="1" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="2" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="col" value="3" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="4" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="col" value="5" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="6" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="col" value="7" />
      </axisPos>
      <axisPos volume="sideTileY3"
               gapREF="sideHorizontalGap">
        <idField name="col" value="8" />
      </axisPos>
      <axisPos volume="sideTileY3">
        <idField name="col" value="9" />
      </axisPos>
    </stackY>    <!-- stop sub here!! -->


<!-- we have a row of (widely separated) pieces of tape for each
     row of top tiles.  There are three flavors of such rows, made
     of the 3 different lengths of top tapes.              -->

    <stackY name="topTapeRowLong" >
      <axisMPos volume="topTapeLong"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="topTapeRowMedium" >
      <axisMPos volume="topTapeMedium"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

    <stackY name="topTapeRowShort" >
      <axisMPos volume="topTapeShort"
                ncopyREF="topTapesPerRow"
                gapREF="topTapeGap" >
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

    <!-- next assemble these pieces (five rows of top tiles,
         two long-tape rows, two medium-tape rows and one
         short-tape row) into the acd top, but first make
         an envelope volume for it                       -->
    <box name="ACDTopEnv" 
         XREF="ACDTopTotalX"
         YREF="ACDTopTotalY"
         ZREF="ACDTopZwidth"
         materialREF="vacuumMat"
         />

<!-- all components are centered w.r.t. Y, so only supply X and Z -->
    <composition name="ACDTop" 
                 envelope="ACDTopEnv">
      <posXYZ volume="topTapeRowLong"
              XREF="topTapeX0_d"
              ZREF="topTapeZLong_d">
        <idField name="row" value="0" />
      </posXYZ>
      <posXYZ volume="topTapeRowMedium"
              XREF="topTapeX1_d "
              ZREF="topTapeZMedium_d">
        <idField name="row" value="1" />
      </posXYZ>
      <posXYZ volume="topTapeRowShort"
              XREF="topTapeX2_d "
              ZREF="topTapeZShort_d">
        <idField name="row" value="2" />
      </posXYZ>

      <posXYZ volume="topTapeRowMedium"
              XREF="topTapeX3_d "
              ZREF="topTapeZMedium_d">
        <idField name="row" value="3" />
      </posXYZ>

      <posXYZ volume="topTapeRowLong"
              XREF="topTapeX4_d"
              ZREF="topTapeZLong_d">
        <idField name="row" value="4" />
      </posXYZ>

      <posXYZ volume="topTileRow"
              XREF="topTileX0_d"
              ZREF="topTileZEdge_d" >
        <idField name="row" value="0" />
      </posXYZ>

      <posXYZ volume="topTileRow"
              XREF="topTileX1_d"
              ZREF="topTileZMedium_d" >
        <idField name="row" value="1" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX2_d"
              ZREF="topTileZCenter_d" >
        <idField name="row" value="2" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX3_d"
              ZREF="topTileZMedium_d" >
        <idField name="row" value="3" />
      </posXYZ>
      <posXYZ volume="topTileRow"
              XREF="topTileX4_d"
              ZREF="topTileZEdge_d" >
        <idField name="row" value="4" />
      </posXYZ>

    </composition>

    <!-- Make the envelope for an X side of tiles -->
    <box name="TileXSideEnv"
         XREF="ACDTotalXSide"
         YREF="tileThickness"
         ZREF="ACDSideHeight" 
         materialREF="vacuumMat"
         />

    <composition name="TileXSide" 
                 envelope="TileXSideEnv" >
      <!-- consists of 4 rows of tiles (long dimension of rows in X) 
         The positioning in Y will be done at the next stage. -->
      <posXYZ volume="sideTileRowX0"
              ZREF="sideTileRow0_d" >
        <idField name="row" value="0" />
      </posXYZ>
      <posXYZ volume="sideTileRowX1"
              ZREF="sideTileRow1_d">
        <idField name="row" value="1" />
      </posXYZ>
      <posXYZ volume="sideTileRowX2"
              ZREF="sideTileRow2_d">
        <idField name="row" value="2" />
      </posXYZ>
      <posXYZ volume="sideTileRowX3"
              ZREF="sideTileRow3_d">
        <idField name="row" value="3" />
      </posXYZ>
    </composition>

    <!-- do the same for Y-side rows of tiles -->
    <box name="TileYSideEnv"
         XREF="tileThickness"
         YREF="ACDTotalYSide"
         ZREF="ACDSideHeight" 
         />

    <composition name="TileYSide" 
                 envelope="TileYSideEnv" >
      <!-- consists of 4 rows of tiles (long dimension of rows in Y) 
         The positioning in X will be done at the next stage. -->
      <posXYZ volume="sideTileRowY0"
              ZREF="sideTileRow0_d">
        <idField name="row" value="0" />
      </posXYZ>
      <posXYZ volume="sideTileRowY1"
              ZREF="sideTileRow1_d">
        <idField name="row" value="1" />
      </posXYZ>
      <posXYZ volume="sideTileRowY2"
              ZREF="sideTileRow2_d">
        <idField name="row" value="2" />
      </posXYZ>
      <posXYZ volume="sideTileRowY3"
              ZREF="sideTileRow3_d">
        <idField name="row" value="3" />
      </posXYZ>
    </composition>

    <!-- stack up tape for X and Y sides -->
    <stackX name="sideTapeRowX" >
      <axisMPos volume="sideTape" ncopyREF="numSideTapes"
                gapREF="betweenSideTapesX">
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackX>

    <stackY name="sideTapeRowY" >
      <axisMPos volume="sideTape" ncopyREF="numSideTapes"
                gapREF="betweenSideTapesY">
        <idField name="col" value="0" step="1" />
      </axisMPos>
    </stackY>

  </section>
</gdd>
